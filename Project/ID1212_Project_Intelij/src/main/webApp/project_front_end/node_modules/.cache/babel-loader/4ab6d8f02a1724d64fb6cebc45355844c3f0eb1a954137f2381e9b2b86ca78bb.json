{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krafr\\\\Documents\\\\GitHub\\\\ID1212-Natverksprogrammering\\\\Project\\\\ID1212_Project_Intelij\\\\src\\\\main\\\\webApp\\\\project_front_end\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport LogInPage from \"./components/LogInPage\";\nimport ProfilePage from \"./components/ProfilePage\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport SignUp from \"./components/SignUp\";\nimport Chat from \"./components/Chat\";\nimport chatData from \"./chatData\";\nimport profileData from \"./profileData\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const navigate = useNavigate();\n  const [authorized, setAuthorized] = React.useState(true);\n  const [userProfileInfoForUI, setUserProfileInfoForUI] = React.useState({\n    id: \"Nobody\",\n    profilePictureID: 1\n  });\n  function test(e) {\n    console.log(userProfileInfoForUI.profilePictureID);\n  }\n  function createProfile(username, password) {\n    //Create profile in database TODO (username/password, set profile picture defult to 1)\n    setAuthorized(true);\n    setUserProfileInfoForUI({\n      id: username,\n      profilePictureID: 1\n    });\n  }\n  function changeUserInfo(name, value) {\n    //Send to database update TODO\n    setUserProfileInfoForUI(prevValues => {\n      return {\n        ...prevValues,\n        [name]: value\n      };\n    });\n  }\n  function updateChatsMembership(chatID) {\n    //send info to database about who joied what TODO\n  }\n  function tryToLogIn() {\n    const login = !authorized; //this is the database call TODO\n\n    setAuthorized(prevValue => !prevValue); //Taken from login TODO\n    if (login) {\n      //database call to get information TODO\n\n      setUserProfileInfoForUI({\n        id: \"Obi-Wan\",\n        profilePictureID: 3,\n        chatsPartOf: [1, 4]\n      });\n      console.log(\"Login succseded\");\n      navigate(\"/profile\");\n    } else {\n      console.log(\"login failed\");\n      navigate(\"/\");\n    }\n  }\n  function logOut() {\n    setUserProfileInfoForUI({\n      id: 0,\n      profilePictureID: 1\n    });\n    setAuthorized(false);\n  }\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(LogInPage, {\n          logIn: tryToLogIn,\n          authorized: authorized\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/signUp\",\n        element: /*#__PURE__*/_jsxDEV(SignUp, {\n          authorized: authorized,\n          createProfileFunction: createProfile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/profile\",\n        element: /*#__PURE__*/_jsxDEV(ProfilePage, {\n          test: test,\n          authorized: authorized,\n          logIn: tryToLogIn,\n          logOut: logOut,\n          changeUserInfoFunction: changeUserInfo,\n          userProfileInfoForUI: userProfileInfoForUI,\n          updateChatsMembershipFunction: updateChatsMembership\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/chat\",\n        element: /*#__PURE__*/_jsxDEV(Chat, {\n          authorized: authorized,\n          currentUser: userProfileInfoForUI.id,\n          logOut: logOut,\n          userProfileInfoForUI: userProfileInfoForUI\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ywa5SVXbf2dEjofYDfdAekHEkjg=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Route","Routes","LogInPage","ProfilePage","ChakraProvider","SignUp","Chat","chatData","profileData","useNavigate","App","navigate","authorized","setAuthorized","useState","userProfileInfoForUI","setUserProfileInfoForUI","id","profilePictureID","test","e","console","log","createProfile","username","password","changeUserInfo","name","value","prevValues","updateChatsMembership","chatID","tryToLogIn","login","prevValue","chatsPartOf","logOut"],"sources":["C:/Users/krafr/Documents/GitHub/ID1212-Natverksprogrammering/Project/ID1212_Project_Intelij/src/main/webApp/project_front_end/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport LogInPage from \"./components/LogInPage\";\r\nimport ProfilePage from \"./components/ProfilePage\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport Chat from \"./components/Chat\";\r\nimport chatData from \"./chatData\";\r\nimport profileData from \"./profileData\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function App() {\r\n  const navigate = useNavigate();\r\n  const [authorized, setAuthorized] = React.useState(true);\r\n  const [userProfileInfoForUI, setUserProfileInfoForUI] = React.useState({\r\n    id: \"Nobody\",\r\n    profilePictureID: 1,\r\n  });\r\n\r\n  function test(e) {\r\n    console.log(userProfileInfoForUI.profilePictureID);\r\n  }\r\n\r\n  function createProfile(username, password) {\r\n    //Create profile in database TODO (username/password, set profile picture defult to 1)\r\n    setAuthorized(true);\r\n    setUserProfileInfoForUI({\r\n      id: username,\r\n      profilePictureID: 1,\r\n    });\r\n  }\r\n\r\n  function changeUserInfo(name, value) {\r\n    //Send to database update TODO\r\n    setUserProfileInfoForUI((prevValues) => {\r\n      return {\r\n        ...prevValues,\r\n        [name]: value,\r\n      };\r\n    });\r\n  }\r\n\r\n  function updateChatsMembership(chatID) {\r\n    //send info to database about who joied what TODO\r\n  }\r\n\r\n  function tryToLogIn() {\r\n    const login = !authorized; //this is the database call TODO\r\n\r\n    setAuthorized((prevValue) => !prevValue); //Taken from login TODO\r\n    if (login) {\r\n      //database call to get information TODO\r\n\r\n      setUserProfileInfoForUI({\r\n        id: \"Obi-Wan\",\r\n        profilePictureID: 3,\r\n        chatsPartOf: [1, 4],\r\n      });\r\n      console.log(\"Login succseded\");\r\n      navigate(\"/profile\");\r\n    } else {\r\n      console.log(\"login failed\");\r\n      navigate(\"/\");\r\n    }\r\n  }\r\n\r\n  function logOut() {\r\n    setUserProfileInfoForUI({\r\n      id: 0,\r\n      profilePictureID: 1,\r\n    });\r\n    setAuthorized(false);\r\n  }\r\n\r\n  return (\r\n    <ChakraProvider>\r\n      <Routes>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          element={<LogInPage logIn={tryToLogIn} authorized={authorized} />}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/signUp\"\r\n          element={\r\n            <SignUp\r\n              authorized={authorized}\r\n              createProfileFunction={createProfile}\r\n            />\r\n          }\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/profile\"\r\n          element={\r\n            <ProfilePage\r\n              test={test}\r\n              authorized={authorized}\r\n              logIn={tryToLogIn}\r\n              logOut={logOut}\r\n              changeUserInfoFunction={changeUserInfo}\r\n              userProfileInfoForUI={userProfileInfoForUI}\r\n              updateChatsMembershipFunction={updateChatsMembership}\r\n            />\r\n          }\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/chat\"\r\n          element={\r\n            <Chat\r\n              authorized={authorized}\r\n              currentUser={userProfileInfoForUI.id}\r\n              logOut={logOut}\r\n              userProfileInfoForUI={userProfileInfoForUI}\r\n            />\r\n          }\r\n        />\r\n      </Routes>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}