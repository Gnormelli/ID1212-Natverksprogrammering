{"ast":null,"code":"function doThrow(e) {\n  throw e;\n}\nconst url = \"http://localhost:8081\";\nconst ApiCall = {\n  apiCall(params) {\n    return fetch(url + params, {\n      method: \"GET\",\n      // HTTP method\n      crossDomain: true,\n      headers: {\n        // HTTP headers\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\"\n      }\n    }).then(response => response.status === 200 ? response : doThrow(new Error(\"Status was: \" + response.statusText + \" \" + response.status))).then(response => response.json());\n  },\n  getData() {\n    const getQueueEndpoint = \"/getQueue\";\n    return ApiCall.apiCall(getQueueEndpoint).then(data => data);\n  }\n};\nexport default ApiCall;","map":{"version":3,"names":["doThrow","e","url","ApiCall","apiCall","params","fetch","method","crossDomain","headers","then","response","status","Error","statusText","json","getData","getQueueEndpoint","data"],"sources":["C:/Users/Gustav Normelli/Documents/ID1212-Natverksprogrammering/Project/ID1212_Project_Intelij/src/main/webApp/project_front_end/src/ApiInterface/ApiCall.js"],"sourcesContent":["function doThrow(e) {\r\n  throw e;\r\n}\r\n\r\nconst url = \"http://localhost:8081\";\r\n\r\nconst ApiCall = {\r\n  apiCall(params) {\r\n    return fetch(url + params, {\r\n      method: \"GET\", // HTTP method\r\n      crossDomain: true,\r\n      headers: {\r\n        // HTTP headers\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Headers\":\r\n          \"Origin, X-Requested-With, Content-Type, Accept\",\r\n      },\r\n    })\r\n      .then((response) =>\r\n        response.status === 200\r\n          ? response\r\n          : doThrow(\r\n              new Error(\r\n                \"Status was: \" + response.statusText + \" \" + response.status\r\n              )\r\n            )\r\n      )\r\n      .then((response) => response.json());\r\n  },\r\n  getData() {\r\n    const getQueueEndpoint = \"/getQueue\";\r\n    return ApiCall.apiCall(getQueueEndpoint).then((data) => data);\r\n  },\r\n};\r\n\r\nexport default ApiCall;\r\n"],"mappings":"AAAA,SAASA,OAAO,CAACC,CAAC,EAAE;EAClB,MAAMA,CAAC;AACT;AAEA,MAAMC,GAAG,GAAG,uBAAuB;AAEnC,MAAMC,OAAO,GAAG;EACdC,OAAO,CAACC,MAAM,EAAE;IACd,OAAOC,KAAK,CAACJ,GAAG,GAAGG,MAAM,EAAE;MACzBE,MAAM,EAAE,KAAK;MAAE;MACfC,WAAW,EAAE,IAAI;MACjBC,OAAO,EAAE;QACP;QACA,cAAc,EAAE,kBAAkB;QAClC,8BAA8B,EAC5B;MACJ;IACF,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IACbA,QAAQ,CAACC,MAAM,KAAK,GAAG,GACnBD,QAAQ,GACRX,OAAO,CACL,IAAIa,KAAK,CACP,cAAc,GAAGF,QAAQ,CAACG,UAAU,GAAG,GAAG,GAAGH,QAAQ,CAACC,MAAM,CAC7D,CACF,CACN,CACAF,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACI,IAAI,EAAE,CAAC;EACxC,CAAC;EACDC,OAAO,GAAG;IACR,MAAMC,gBAAgB,GAAG,WAAW;IACpC,OAAOd,OAAO,CAACC,OAAO,CAACa,gBAAgB,CAAC,CAACP,IAAI,CAAEQ,IAAI,IAAKA,IAAI,CAAC;EAC/D;AACF,CAAC;AAED,eAAef,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}