{"ast":null,"code":"import { resolveMotionValue } from \"framer-motion\";\nfunction doThrow(e) {\n  throw e;\n}\nconst url = \"http://localhost:8081\";\nconst ApiPost = {\n  apiCall(params, object) {\n    return fetch(url + params, {\n      method: \"POST\",\n      // HTTP method\n      crossDomain: true,\n      headers: {\n        // HTTP headers\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, \" + \"Content-Type, Accept\"\n        // \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\n        //\"mode\": \"no-cors\"\n      },\n\n      body: JSON.stringify(object)\n    }).then(response => response.status === 200 ? response : doThrow(new Error(\"Status was: \" + response.statusText + \" \" + response.status))).then(response => {\n      console.log(\"3\");\n      console.log(response);\n      console.log(response.body);\n      console.log(\"4\");\n      response.json();\n    });\n  },\n  postData(object) {\n    console.log(\"1\");\n    console.log(JSON.stringify(object));\n    console.log(2);\n    const postQueueEndpoint = \"/postQueue\";\n    return ApiPost.apiCall(postQueueEndpoint, object).then(data => data);\n  },\n  postLoginInformation(loginForm) {\n    const postLoginEndpoint = \"/perform_login\";\n    return ApiPost.apiCall(postLoginEndpoint, loginForm).then(data => data);\n  },\n  getLoginInformation(loginForm) {\n    const getLoginEndpoint = \"/login\";\n    return ApiPost.apiCall(getLoginEndpoint, loginForm).then(data => data);\n  }\n};\nexport default ApiPost;","map":{"version":3,"names":["resolveMotionValue","doThrow","e","url","ApiPost","apiCall","params","object","fetch","method","crossDomain","headers","body","JSON","stringify","then","response","status","Error","statusText","console","log","json","postData","postQueueEndpoint","data","postLoginInformation","loginForm","postLoginEndpoint","getLoginInformation","getLoginEndpoint"],"sources":["C:/Users/krafr/Documents/GitHub/ID1212-Natverksprogrammering/Project/ID1212_Project_Intelij/src/main/webApp/project_front_end/src/ApiInterface/ApiPost.js"],"sourcesContent":["import {resolveMotionValue} from \"framer-motion\";\r\n\r\nfunction doThrow(e) {\r\n    throw e;\r\n}\r\n\r\nconst url = \"http://localhost:8081\";\r\nconst ApiPost = {\r\n    apiCall(params, object) {\r\n        return fetch(url + params, {\r\n        method: \"POST\", // HTTP method\r\n        crossDomain: true,\r\n        headers: {\r\n          // HTTP headers\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Headers\":\r\n                \"Origin, X-Requested-With, \" +\r\n                \"Content-Type, Accept\",\r\n           // \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\r\n            //\"mode\": \"no-cors\"\r\n            },\r\n            \r\n        body: JSON.stringify(object),\r\n        })\r\n            .then((response) =>\r\n            response.status === 200\r\n                ? response\r\n                : doThrow(\r\n                    new Error(\r\n                    \"Status was: \" + response.statusText + \" \" + response.status\r\n                    )\r\n                )\r\n            )\r\n            .then((response) => {\r\n                console.log(\"3\")\r\n                console.log(response)\r\n                console.log(response.body)\r\n                console.log(\"4\")\r\n                response.json()\r\n            });\r\n        },\r\n        postData(object) {\r\n            console.log(\"1\")\r\n            console.log(JSON.stringify(object))\r\n            console.log(2)\r\n\r\n            const postQueueEndpoint = \"/postQueue\";\r\n            return ApiPost.apiCall(postQueueEndpoint, object).then((data) => data);\r\n        },\r\n        postLoginInformation(loginForm) {\r\n            const postLoginEndpoint = \"/perform_login\";\r\n            return ApiPost.apiCall(postLoginEndpoint, loginForm).then((data) => data);\r\n        },\r\n        getLoginInformation(loginForm) {\r\n            const getLoginEndpoint = \"/login\";\r\n            return ApiPost.apiCall(getLoginEndpoint,loginForm).then((data) => data);\r\n    },\r\n    };\r\n\r\nexport default ApiPost;"],"mappings":"AAAA,SAAQA,kBAAkB,QAAO,eAAe;AAEhD,SAASC,OAAO,CAACC,CAAC,EAAE;EAChB,MAAMA,CAAC;AACX;AAEA,MAAMC,GAAG,GAAG,uBAAuB;AACnC,MAAMC,OAAO,GAAG;EACZC,OAAO,CAACC,MAAM,EAAEC,MAAM,EAAE;IACpB,OAAOC,KAAK,CAACL,GAAG,GAAGG,MAAM,EAAE;MAC3BG,MAAM,EAAE,MAAM;MAAE;MAChBC,WAAW,EAAE,IAAI;MACjBC,OAAO,EAAE;QACP;QACE,cAAc,EAAE,kBAAkB;QAClC,8BAA8B,EAC1B,4BAA4B,GAC5B;QACL;QACC;MACA,CAAC;;MAELC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,MAAM;IAC3B,CAAC,CAAC,CACGQ,IAAI,CAAEC,QAAQ,IACfA,QAAQ,CAACC,MAAM,KAAK,GAAG,GACjBD,QAAQ,GACRf,OAAO,CACL,IAAIiB,KAAK,CACT,cAAc,GAAGF,QAAQ,CAACG,UAAU,GAAG,GAAG,GAAGH,QAAQ,CAACC,MAAM,CAC3D,CACJ,CACJ,CACAF,IAAI,CAAEC,QAAQ,IAAK;MAChBI,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;MAChBD,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;MACrBI,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACJ,IAAI,CAAC;MAC1BQ,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;MAChBL,QAAQ,CAACM,IAAI,EAAE;IACnB,CAAC,CAAC;EACN,CAAC;EACDC,QAAQ,CAAChB,MAAM,EAAE;IACba,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAChBD,OAAO,CAACC,GAAG,CAACR,IAAI,CAACC,SAAS,CAACP,MAAM,CAAC,CAAC;IACnCa,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;IAEd,MAAMG,iBAAiB,GAAG,YAAY;IACtC,OAAOpB,OAAO,CAACC,OAAO,CAACmB,iBAAiB,EAAEjB,MAAM,CAAC,CAACQ,IAAI,CAAEU,IAAI,IAAKA,IAAI,CAAC;EAC1E,CAAC;EACDC,oBAAoB,CAACC,SAAS,EAAE;IAC5B,MAAMC,iBAAiB,GAAG,gBAAgB;IAC1C,OAAOxB,OAAO,CAACC,OAAO,CAACuB,iBAAiB,EAAED,SAAS,CAAC,CAACZ,IAAI,CAAEU,IAAI,IAAKA,IAAI,CAAC;EAC7E,CAAC;EACDI,mBAAmB,CAACF,SAAS,EAAE;IAC3B,MAAMG,gBAAgB,GAAG,QAAQ;IACjC,OAAO1B,OAAO,CAACC,OAAO,CAACyB,gBAAgB,EAACH,SAAS,CAAC,CAACZ,IAAI,CAAEU,IAAI,IAAKA,IAAI,CAAC;EAC/E;AACA,CAAC;AAEL,eAAerB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}